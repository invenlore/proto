syntax = "proto3";

package user;

import "proto/google/api/annotations.proto";
import "proto/protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/invenlore/proto/proto/user";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: { version: "1.0" };
	external_docs: {
		url: "https://github.com/invenlore/proto";
		description: "gRPC-gateway invenlore proto repository";
	}
	schemes: HTTPS;
};

message User {
	string id = 1;
	string email = 2;
}

message AddUserRequest {}
message AddUserResponse {
	User user = 1;
}

message GetUserRequest {
	string id = 1;
}
message GetUserResponse {
	User user = 1;
}

message DeleteUserRequest {
	string id = 1;
}
message DeleteUserResponse {}

message ListUsersRequest {}
message ListUsersResponse {
	User user = 1;
}

service UserService {
	rpc AddUser(AddUserRequest) returns (AddUserResponse) {
		option (google.api.http) = {
			post: "/api/v1/users"
			body: "*"
			response_body: "user"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Add a user"
			description: "Add a user"
			tags: "Users"
		};
	}

	rpc GetUser(GetUserRequest) returns (GetUserResponse) {
		option (google.api.http) = {
			get: "/api/v1/users/{id}"
			response_body: "user"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get a user"
			description: "Get a user by id"
			tags: "Users"
		};
	}

	rpc ListUsers(ListUsersRequest) returns (stream ListUsersResponse) {
		option (google.api.http) = {
			get: "/api/v1/users"
			response_body: "user"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "List users"
			description: "List all users"
			tags: "Users"
		};
	}
}
